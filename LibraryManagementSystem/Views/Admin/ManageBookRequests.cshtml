@model IEnumerable<LibraryManagementSystem.Models.BookRequest>

<div class="container mt-4">
    <h3>Manage Book Requests</h3>

    <!-- Filter Dropdown -->
    <div class="d-flex justify-content-between mb-3">
        <label for="filterStatus">Filter by Status:</label>
        <select id="filterStatus" class="form-select w-auto" onchange="filterRequests()">
            <option value="All">All</option>
            <option value="Pending">Pending</option>
            <option value="Approved">Approved</option>
            <option value="Rejected">Rejected</option>
        </select>
    </div>

    <!-- Requests Table -->
    <table class="table table-bordered mt-3">
        <thead>
            <tr>
                <th>Title</th>
                <th>Student Name</th>
                <th>Request Date</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="bookRequestsTableBody">
            @if (Model.Any())
            {
                @foreach (var request in Model)
                {
                    <tr>
                        <td>
                            @if (request.Book != null)
                            {
                                @request.Book.Title
                            }
                            else
                            {
                                <span class="text-danger">Book not found</span>
                            }
                        </td>
                        <td>
                            @if (request.User != null)
                            {
                                @request.User.FullName
                            }
                            else
                            {
                                <span class="text-danger">Student not found</span>
                            }
                        </td>
                        <td>@request.RequestDate.ToString("dd MMM yyyy")</td>
                        <td>
                            @switch (request.Status)
                            {
                                case "Approved":
                                    <span class="badge bg-success">Approved</span>
                                    break;
                                case "Rejected":
                                    <span class="badge bg-danger">Rejected</span>
                                    break;
                                default:
                                    <span class="badge bg-warning">Pending</span>
                                    break;
                            }
                        </td>
                        <td>
                            @if (request.Status == "Pending")
                            {
                                <button class="btn btn-success btn-sm" onclick="approveRequest(@request.RequestId)">Approve</button>
                                <button class="btn btn-danger btn-sm" onclick="rejectRequest(@request.RequestId)">Reject</button>
                            }
                            else
                            {
                                <span class="text-muted">No Actions Available</span>
                            }
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="5" class="text-center">No book requests found.</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    function filterRequests() {
        const status = $("#filterStatus").val(); // Get selected filter status

        $.ajax({
            url: `/Admin/FilterBookRequests?status=${status}`,
            type: "GET",
            success: function (data) {
                // Replace the table body with the filtered content
                $("#bookRequestsTableBody").html($(data).find("#bookRequestsTableBody").html());
            },
            error: function () {
                alert("Error loading filtered requests.");
            }
        });
    }

    function approveRequest(requestId) {
        if (!confirm("Are you sure you want to approve this request?")) return;

        $.ajax({
            url: "/Admin/ApproveRequest",
            type: "POST",
            data: { requestId: requestId },
            success: function (response) {
                alert(response.message);
                filterRequests(); // Refresh the view after approval
            },
            error: function () {
                alert("Error approving request.");
            }
        });
    }

    function rejectRequest(requestId) {
        if (!confirm("Are you sure you want to reject this request?")) return;

        $.ajax({
            url: "/Admin/RejectRequest",
            type: "POST",
            data: { requestId: requestId },
            success: function (response) {
                alert(response.message);
                filterRequests(); // Refresh the view after rejection
            },
            error: function () {
                alert("Error rejecting request.");
            }
        });
    }
</script>
