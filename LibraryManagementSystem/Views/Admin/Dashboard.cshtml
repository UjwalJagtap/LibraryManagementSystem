@{
    ViewData["Title"] = "Admin Dashboard";
}
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    body {
        
        background-size: cover;
        background-position: center;
       

    #one {
        background: rgba(255, 255, 255, 0.9); /* Semi-transparent background for content */
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    .nav {
        font-size: 1.1rem;
    }

    .nav-link {
        cursor: pointer;
    }

    #content {
        margin-top: 20px;
    }
    #bookRequestNotificationCount {
        font-size: 0.75rem;      /* Smaller font size for the badge */
        width: 1.5rem;           /* Fixed width for the circle */
        height: 1.5rem;          /* Fixed height for the circle */
        padding: 0;              /* Remove padding for a perfect circle */
        border-radius: 50%;      /* Make the badge a circle */
        text-align: center;      /* Center the text horizontally */
        line-height: 1.5rem;     /* Center the text vertically */
        position: relative;      /* Ensure it stays in place */
        top: -2px;               /* Slightly adjust vertical alignment */
    }

    /* Hide badge when count is 0 */
    #bookRequestNotificationCount.hidden {
        display: none;
    }
</style>

<div class="container mt-4" id="one">
    <h1 class="text-center">Admin Dashboard</h1>

    <!-- Metrics Section -->
    <div class="row mt-4">
        <div class="col-md-3">
            <div class="card text-white bg-primary mb-3">
                <div class="card-header">Total Books</div>
                <div class="card-body">
                    <h5 class="card-title" id="totalBooks">@ViewBag.TotalBooks</h5>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-white bg-success mb-3">
                <div class="card-header">Registered Students</div>
                <div class="card-body">
                    <h5 class="card-title"  id="totalStudents">@ViewBag.TotalStudents</h5>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-white bg-warning mb-3">
                <div class="card-header">Books Issued</div>
                <div class="card-body">
                    <h5 class="card-title"  id="totalIssuedBooks">@ViewBag.TotalIssuedBooks</h5>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-white bg-danger mb-3">
                <div class="card-header">Overdue Books</div>
                <div class="card-body">
                    <h5 class="card-title"  id="totalOverdueBooks">@ViewBag.TotalOverdueBooks</h5>
                </div>
            </div>
        </div>
    </div>

    <!-- Navigation Panel -->
    <div class="row">
        <div class="col-md-3 border-end">
            <h4>Welcome, Admin</h4>
            <ul class="nav flex-column mt-4">
                <!-- Admin Dashboard Navigation -->
                <li class="nav-item mb-2">
                    <a class="nav-link text-primary" onclick="loadContent('Books')">Books</a>
                </li>
                <li class="nav-item mb-2">
                    <a class="nav-link text-primary" onclick="loadContent('StudentInfo')">Student Info</a>
                </li>
                <li class="nav-item mb-2">
                    <a class="nav-link text-primary d-flex justify-content-between align-items-center" onclick="loadContent('ManageBookRequests')" style="position: relative;">
                        Manage Book Requests
                        <span class="badge bg-danger ms-2" id="bookRequestNotificationCount" style="font-size: 0.75rem;">0</span>
                    </a>
                </li>

                <li class="nav-item mb-2">
                    <a href="#" class="nav-link text-primary" onclick="loadContent('ViewIssuedBooks')">View Issued Books</a>
                </li>
                <li class="nav-item mb-2">
                    <a class="nav-link text-primary" onclick="loadContent('ManageFines')">Manage Fines</a>
                </li>
                <li class="nav-item mb-2">
                    <a class="nav-link text-primary" onclick="loadContent('ReturnBook')">Return Book</a>
                </li>
                <!-- Logout Link -->
                <li class="nav-item mb-2">
                    <a href="@Url.Action("Logout", "Account")" class="nav-link text-danger">Logout</a>
                </li>
            </ul>
        </div>

        <!-- Dynamic Content Area -->
        <div class="col-md-9" id="content">
            <h4 class="text-center">Select a Functionality</h4>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    function loadContent(action) {
        $.ajax({
            url: `/Admin/${action}`,
            type: "GET",
            success: function (data) {
                $("#content").html(data);
                updateMetrics(response.metrics);
            },
            error: function () {
                alert(`Error loading ${action} view.`);
            }
        });
    }
    function updateMetrics(metrics) {

        $("#totalBooks").text(metrics.totalBooks);
        $("#totalStudents").text(metrics.totalStudents);
        $("#totalIssuedBooks").text(metrics.totalIssuedBooks);
        $("#totalOverdueBooks").text(metrics.totalOverdueBooks);
    }
    function updateBookRequestNotificationCount() {
        
        $.ajax({
            url: "http://localhost:5043/api/BookRequests/count/pending", // API URL for pending count
            type: "GET",
            success: function (response) {
                console.log(response)
                // Assuming your API returns { success: true, count: X }
                if (response.success) {
                    const count = response.count;

                    // Update the badge
                    const badge = $("#bookRequestNotificationCount");
                    badge.text(count);

                    // Show or hide the badge based on count
                    if (count === 0) {
                        badge.addClass("hidden");
                    } else {
                        badge.removeClass("hidden");
                    }
                }
            },
            error: function () {
                console.error("Failed to fetch book request notification count.");
            }
        });
    }

    // Update the badge every 60 seconds
    setInterval(updateBookRequestNotificationCount, 10000);

    // Initial call to load the count
    updateBookRequestNotificationCount();
</script>
