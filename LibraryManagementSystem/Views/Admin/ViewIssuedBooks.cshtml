@model IEnumerable<dynamic>
<div class="container mt-4">
    <h3>Issued Books</h3>

    <!-- Filter and Search Section -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <div>
            <label for="filterIssuedStatus" class="fw-bold">Filter by Status:</label>
            <select id="filterIssuedStatus" class="form-select w-auto" onchange="filterIssuedBooksAdmin()">
                <option value="All" selected>All</option>
                <option value="On Time">On Time</option>
                <option value="Overdue">Overdue</option>
                <option value="Returned">Returned</option>
            </select>
        </div>

        <!-- Search Bar -->
        <div class="input-group w-50">
            <input type="text" id="searchIssuedBooksQuery" class="form-control" placeholder="Search by Book Title or Student Name">
            <button class="btn btn-primary" onclick="searchIssuedBooksAdmin()">Search</button>
            <button class="btn btn-secondary ms-2" onclick="loadAllIssuedBooks()">Show All</button>
        </div>
    </div>
     
    <!-- Issued Books Table Section -->
    <div>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Book ID</th>
                    <th>Book Title</th>
                    <th>Student Name</th>
                    <th>Issue Date</th>
                    <th>Due Date</th>
                    <th>Return Date</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody id="issuedBooksTableBody">
                @foreach (var book in Model)
                {
                    <tr>
                        <td>@book.BookId</td>
                        <td>@book.BookTitle</td>
                        <td>@book.StudentName</td>
                        <td>@book.IssueDate.ToString("dd MMM yyyy")</td>
                        <td>@book.DueDate.ToString("dd MMM yyyy")</td>
                        <td>
                            @if (book.ReturnDate != null)
                            {
                                @book.ReturnDate?.ToString("dd MMM yyyy")
                            }
                            else
                            {
                                <span class="badge bg-warning">Not Returned</span>
                            }
                        </td>
                        <td>
                            <span class="badge bg-@(book.Status == "Overdue" ? "danger" : book.Status == "Returned" ? "secondary" : "success")">
                                @book.Status
                            </span>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<script>
    function searchIssuedBooksAdmin() {
        const query = $("#searchIssuedBooksQuery").val().trim();

        if (!query) {
            alert("Please enter a search query.");
            return;
        }

        $.ajax({
            url: `/Admin/SearchIssuedBooksAdmin?searchQuery=${query}`,
            type: "GET",
            success: function (data) {
                const tableBody = $(data).find("#issuedBooksTableBody").html();
                $("#issuedBooksTableBody").html(tableBody.trim() !== "" ? tableBody : "<tr><td colspan='7' class='text-center text-danger'>No matching issued books found.</td></tr>");
            },
            error: function () {
                alert("Error loading search results.");
            }
        });
    }

 
    function loadAllIssuedBooks() {
        $.ajax({
            url: "/Admin/ViewIssuedBooks",
            type: "GET",
            success: function (data) {
                const tableBody = $(data).find("#issuedBooksTableBody").html();
                $("#issuedBooksTableBody").html(tableBody);
                $("#searchIssuedBooksQuery").val(""); // Clear search input
            },
            error: function () {
                alert("An error occurred while loading all issued books.");
            }
        });
    }

    function filterIssuedBooksAdmin() {
        var selectedStatus = $("#filterIssuedStatus").val();

        $.ajax({
            url: `/Admin/FilterIssuedBooksAdmin?status=${selectedStatus}`,
            type: "GET",
            success: function (data) {
                const tableBody = $(data).find("#issuedBooksTableBody").html();
                $("#issuedBooksTableBody").html(tableBody.trim() !== "" ? tableBody : "<tr><td colspan='7' class='text-center text-danger'>No matching issued books found.</td></tr>");
            },
            error: function () {
                alert("Error loading issued books.");
            }
        });
    }



</script>
