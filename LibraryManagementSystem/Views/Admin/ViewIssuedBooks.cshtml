@model IEnumerable<dynamic> // For anonymous types returned by LINQ Select
<div class="container mt-4">
    <h3>Issued Books</h3>

    <!-- Filter Section (placed outside the table) -->
    <div class="d-flex justify-content-between mb-3">
        <label for="filterIssuedStatus" class="fw-bold">Filter by Status:</label>
        <select id="filterIssuedStatus" class="form-select w-auto" onchange="filterIssuedBooksAdmin()">
            <option value="All" selected>All</option>
            <option value="On Time">On Time</option>
            <option value="Overdue">Overdue</option>
            <option value="Returned">Returned</option>
        </select>
    </div>

    <!-- Issued Books Table Section (dynamic content) -->
    <div id="issuedBooksTable">
        @* Partial table rendering will be inserted here *@
        @if (Model.Any())
        {
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Book ID</th>
                        <th>Book Title</th>
                        <th>Student Name</th>
                        <th>Issue Date</th>
                        <th>Due Date</th>
                        <th>Return Date</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var book in Model)
                    {
                        <tr>
                            <td>@book.BookId</td>
                            <td>@book.BookTitle</td>
                            <td>@book.StudentName</td>
                            <td>@book.IssueDate.ToString("dd MMM yyyy")</td>
                            <td>@book.DueDate.ToString("dd MMM yyyy")</td>
                            <td>
                                @if (book.ReturnDate != null)
                                {
                                    @book.ReturnDate?.ToString("dd MMM yyyy")
                                }
                                else
                                {
                                    <span class="badge bg-warning">Not Returned</span>
                                }
                            </td>
                            <td>
                                <span class="badge bg-@(book.Status == "Overdue" ? "danger" : book.Status == "Returned" ? "secondary" : "success")">
                                    @book.Status
                                </span>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p class="text-danger">No issued books found.</p>
        }
    </div>
</div>

<script>
    function searchIssuedBooks() {
        const query = $("#searchQuery").val().trim();

        $.ajax({
            url: `/Admin/SearchIssuedBooks?searchQuery=${query}`,
            type: "GET",
            success: function (data) {
                $("#issuedBooksTable").html($(data).find("#issuedBooksTable").html()); // Update the issued books table
            },
            error: function () {
                alert("Error loading issued books.");
            }
        });
    }
    function filterIssuedBooksAdmin() {
        var selectedStatus = $("#filterIssuedStatus").val();

        $.ajax({
            url: `/Admin/FilterIssuedBooksAdmin?status=${selectedStatus}`,
            type: "GET",
            success: function (data) {
                $("#issuedBooksTable").html($(data).find("#issuedBooksTable").html()); // Only update the table content
            },
            error: function () {
                alert("Error loading issued books.");
            }
        });
    }



</script>
