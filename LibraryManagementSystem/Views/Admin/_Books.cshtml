@model IEnumerable<LibraryManagementSystem.Models.Book>

<div>
    <h4>Books</h4>
    <!-- Button to load the Add Book form -->
    <button class="btn btn-primary mb-3" id="addBookButton" onclick="toggleAddBookForm()">Add Book</button>
</div>

<div id="booksTable">
    @if (Model != null && Model.Any())
    {
        <table class="table table-bordered">
            <thead class="thead-light">
                <tr>
                    <th>Book ID</th>
                    <th>Title</th>
                    <th>Author</th>
                    <th>Genre</th>
                    <th>Available Copies</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var book in Model)
                {
                    <tr id="book-row-@book.BookId">
                        <td>@book.BookId</td>
                        <td>@book.Title</td>
                        <td>@book.Author</td>
                        <td>@book.Genre</td>
                        <td>@book.AvailableCopies</td>
                        <td>
                            <button class="btn btn-warning btn-sm" onclick="loadUpdateBookForm(@book.BookId)">Update</button>
                            <button class="btn btn-danger btn-sm" onclick="deleteBook(@book.BookId)">Remove</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p class="text-danger">No books available.</p>
    }
</div>

<div id="bookFormContainer" class="mt-4" style="display: none;"></div>

<script>
    function toggleAddBookForm() {
        clearFormContainer();
        $("#booksTable").hide(); // Hide the table
        $("#bookFormContainer").show(); // Show the Add Book form
        loadAddBookForm();
    }

    function loadAddBookForm() {
        $.ajax({
            url: "/Admin/AddBooks",
            type: "GET",
            success: function (data) {
                $("#bookFormContainer").html(data);
            },
            error: function () {
                alert("An error occurred while loading the Add Book form.");
            }
        });
    }

    function loadUpdateBookForm(bookId) {
        clearFormContainer();
        $("#booksTable").hide(); // Hide the table
        $("#bookFormContainer").show(); // Show the Update Book form

        $.ajax({
            url: `/Admin/UpdateBook/${bookId}`,
            type: "GET",
            success: function (data) {
                $("#bookFormContainer").html(data);
            },
            error: function () {
                alert("An error occurred while loading the Update Book form.");
            }
        });
    }

    function cancelForm() {
        clearFormContainer();
        $("#bookFormContainer").hide(); // Hide the form container
        $("#booksTable").show(); // Show the table
        loadBooks();
    }

    function clearFormContainer() {
        $("#bookFormContainer").html(""); // Clear the form container
    }

    $(document).on("submit", "#bookFormContainer form", function (e) {
        e.preventDefault();

        const form = $(this);

        $.ajax({
            url: form.attr("action"),
            type: form.attr("method"),
            data: form.serialize(),
            success: function (response) {
                if (response.success) {
                    displaySuccessMessage(response.message);

                    // Update the books table dynamically
                    const updatedTableHtml = renderBooksHtml(response.books);
                    $("#booksTable").html(updatedTableHtml);
                    $("#bookFormContainer").hide();
                    $("#booksTable").show();

                    // Update metrics
                    updateMetrics(response.metrics);
                } else {
                    alert(response.message);
                }
            },
            error: function () {
                alert("An error occurred while submitting the form.");
            }
        });
    });

    function deleteBook(bookId) {
        if (!confirm("Are you sure you want to delete this book?")) return;

        $.ajax({
            url: `/Admin/DeleteBook/${bookId}`,
            type: "POST",
            success: function (response) {
                if (response.success) {
                    const updatedTableHtml = renderBooksHtml(response.books);
                    $("#booksTable").html(updatedTableHtml);
                    displaySuccessMessage(response.message);

                    // Update metrics
                    updateMetrics(response.metrics);
                } else {
                    alert(response.message);
                }
            },
            error: function () {
                alert("An error occurred while deleting the book.");
            }
        });
    }

    function displaySuccessMessage(message) {
        $("#successMessage")
            .text(message)
            .show()
            .delay(3000)
            .fadeOut();
    }

    function loadBooks() {
        $.ajax({
            url: "/Admin/Books",
            type: "GET",
            success: function (data) {
                $("#booksTable").html($(data).find("#booksTable").html());
            },
            error: function () {
                alert("An error occurred while loading the books.");
            }
        });
    }

    function renderBooksHtml(books) {
        let html = `
                <table class="table table-bordered">
                    <thead class="thead-light">
                        <tr>
                            <th>Book ID</th>
                            <th>Title</th>
                            <th>Author</th>
                            <th>Genre</th>
                            <th>Available Copies</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
            `;

        books.forEach(book => {
            html += `
                    <tr id="book-row-${book.bookId}">
                         <td>${book.bookId}</td>
                        <td>${book.title}</td>
                        <td>${book.author}</td>
                        <td>${book.genre}</td>
                        <td>${book.availableCopies}</td>
                        <td>
                            <button class="btn btn-warning btn-sm" onclick="loadUpdateBookForm(${book.bookId})">Update</button>
                            <button class="btn btn-danger btn-sm" onclick="deleteBook(${book.bookId})">Remove</button>
                        </td>
                    </tr>
                `;
        });

        html += `</tbody></table>`;
        return html;
    }

    function updateMetrics(metrics) {
        $("#totalBooks").text(metrics.TotalBooks);
        $("#totalStudents").text(metrics.TotalStudents);
        $("#totalIssuedBooks").text(metrics.TotalIssuedBooks);
        $("#totalOverdueBooks").text(metrics.TotalOverdueBooks);
    }
</script>
